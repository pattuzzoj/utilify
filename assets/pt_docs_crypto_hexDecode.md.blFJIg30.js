import{_ as a,c as t,a3 as i,o as r}from"./chunks/framework.DtMx7FFi.js";const b=JSON.parse('{"title":"hexDecode","description":"","frontmatter":{},"headers":[],"relativePath":"pt/docs/crypto/hexDecode.md","filePath":"pt/docs/crypto/hexDecode.md","lastUpdated":1754073507000}'),s={name:"pt/docs/crypto/hexDecode.md"};function o(d,e,n,h,l,c){return r(),t("div",null,e[0]||(e[0]=[i('<h1 id="hexdecode" tabindex="-1">hexDecode <a class="header-anchor" href="#hexdecode" aria-label="Permalink to &quot;hexDecode&quot;">​</a></h1><p>Decodifica uma string hexadecimal para um Uint8Array.</p><h2 id="sintaxe" tabindex="-1">Sintaxe <a class="header-anchor" href="#sintaxe" aria-label="Permalink to &quot;Sintaxe&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hexDecode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hex: string): Uint8Array</span></span></code></pre></div><h2 id="parametros" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>hex</code></td><td><code>string</code></td><td>A string hexadecimal a ser decodificada</td></tr></tbody></table><h2 id="retorno" tabindex="-1">Retorno <a class="header-anchor" href="#retorno" aria-label="Permalink to &quot;Retorno&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>Uint8Array</code></td><td>Os bytes decodificados da string hexadecimal</td></tr></tbody></table><h2 id="exemplo" tabindex="-1">Exemplo <a class="header-anchor" href="#exemplo" aria-label="Permalink to &quot;Exemplo&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hexDecode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;48656c6c6f&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Uint8Array([72, 101, 108, 108, 111])</span></span></code></pre></div><h2 id="notas" tabindex="-1">Notas <a class="header-anchor" href="#notas" aria-label="Permalink to &quot;Notas&quot;">​</a></h2><ul><li>Lança um erro se a string não for hexadecimal válida ou se o comprimento não for par.</li></ul><h2 id="referencias" tabindex="-1">Referências <a class="header-anchor" href="#referencias" aria-label="Permalink to &quot;Referências&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">MDN: Uint8Array</a></li></ul>',14)]))}const m=a(s,[["render",o]]);export{b as __pageData,m as default};

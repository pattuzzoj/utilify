import{_ as e,c as t,a3 as s,o as i}from"./chunks/framework.DtMx7FFi.js";const k=JSON.parse('{"title":"base64Decode","description":"","frontmatter":{},"headers":[],"relativePath":"pt/docs/crypto/base64Decode.md","filePath":"pt/docs/crypto/base64Decode.md","lastUpdated":1756761856000}'),o={name:"pt/docs/crypto/base64Decode.md"};function r(d,a,n,l,h,p){return i(),t("div",null,a[0]||(a[0]=[s(`<h1 id="base64decode" tabindex="-1">base64Decode <a class="header-anchor" href="#base64decode" aria-label="Permalink to &quot;base64Decode&quot;">​</a></h1><p>Decodifica uma string Base64 ou Base64URL para um Uint8Array.</p><h2 id="sintaxe" tabindex="-1">Sintaxe <a class="header-anchor" href="#sintaxe" aria-label="Permalink to &quot;Sintaxe&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">base64Decode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(input: string, urlSafe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> boolean): Uint8Array</span></span></code></pre></div><h2 id="parametros" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>input</code></td><td><code>string</code></td><td>A string codificada em Base64 ou Base64URL</td></tr><tr><td><code>urlSafe</code></td><td><code>boolean</code></td><td>(Opcional) Se verdadeiro, trata como Base64URL. Padrão: <code>false</code></td></tr></tbody></table><h2 id="retorno" tabindex="-1">Retorno <a class="header-anchor" href="#retorno" aria-label="Permalink to &quot;Retorno&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>Uint8Array</code></td><td>Os bytes decodificados da string</td></tr></tbody></table><h2 id="exemplo" tabindex="-1">Exemplo <a class="header-anchor" href="#exemplo" aria-label="Permalink to &quot;Exemplo&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">base64Decode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SGVsbG8=&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Uint8Array([72, 101, 108, 108, 111])</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">base64Decode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;U29tZV9kYWRvLQ&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Uint8Array([...])</span></span></code></pre></div><h2 id="notas" tabindex="-1">Notas <a class="header-anchor" href="#notas" aria-label="Permalink to &quot;Notas&quot;">​</a></h2><ul><li>Lança um erro se a string não for válida para o formato especificado.</li><li>Suporta ambientes com <code>Buffer</code> (Node.js) e <code>atob</code> (navegadores).</li></ul><h2 id="referencias" tabindex="-1">Referências <a class="header-anchor" href="#referencias" aria-label="Permalink to &quot;Referências&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/pt-BR/docs/Web/API/atob" target="_blank" rel="noreferrer">MDN: atob</a></li><li><a href="https://nodejs.org/api/buffer.html" target="_blank" rel="noreferrer">Node.js: Buffer</a></li></ul>`,14)]))}const b=e(o,[["render",r]]);export{k as __pageData,b as default};

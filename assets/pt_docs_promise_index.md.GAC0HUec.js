import{_ as s,c as a,a3 as e,o as t}from"./chunks/framework.DtMx7FFi.js";const c=JSON.parse('{"title":"Promise","description":"","frontmatter":{},"headers":[],"relativePath":"pt/docs/promise/index.md","filePath":"pt/docs/promise/index.md","lastUpdated":1753270492000}'),n={name:"pt/docs/promise/index.md"};function l(h,i,p,r,o,k){return t(),a("div",null,i[0]||(i[0]=[e('<h1 id="promise" tabindex="-1">Promise <a class="header-anchor" href="#promise" aria-label="Permalink to &quot;Promise&quot;">​</a></h1><p>A Promise module that provides utility functions for working with asynchronous operations and promises. It includes features like backoff retries, benchmarking, debouncing, throttling, parallel execution, and more.</p><p>The module helps manage complex asynchronous workflows and provides better control over promise-based operations through various utility functions.</p><p>Key features:</p><ul><li>Exponential backoff retries</li><li>Performance benchmarking</li><li>Debouncing and throttling</li><li>Deferred promises</li><li>Exclusive execution locks</li><li>Parallel task execution</li><li>Rate limiting</li><li>Retry mechanisms</li><li>Sleep/delay utilities</li></ul><h2 id="visao-geral" tabindex="-1">Visão Geral <a class="header-anchor" href="#visao-geral" aria-label="Permalink to &quot;Visão Geral&quot;">​</a></h2><h3 id="backoff" tabindex="-1"><a href="./backoff">backoff</a> <a class="header-anchor" href="#backoff" aria-label="Permalink to &quot;[backoff](./backoff.md)&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">backoff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fn: Function, options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BackoffOptions): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">any</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Tenta executar uma função com estratégia de backoff exponencial.</p><h3 id="benchmark" tabindex="-1"><a href="./benchmark">benchmark</a> <a class="header-anchor" href="#benchmark" aria-label="Permalink to &quot;[benchmark](./benchmark.md)&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">benchmark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fn: Function): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Mede o tempo de execução de uma função assíncrona.</p><h3 id="debounce" tabindex="-1"><a href="./debounce">debounce</a> <a class="header-anchor" href="#debounce" aria-label="Permalink to &quot;[debounce](./debounce.md)&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">debounce</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fn: Function, wait: number): Function;</span></span></code></pre></div><p>Retorna uma versão &quot;debounced&quot; de uma função que atrasa sua execução.</p><h3 id="defer" tabindex="-1"><a href="./defer">defer</a> <a class="header-anchor" href="#defer" aria-label="Permalink to &quot;[defer](./defer.md)&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(): { promise: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; resolve: Function; reject: Function };</span></span></code></pre></div><p>Cria uma promise diferida com métodos externos de resolução e rejeição.</p><h3 id="lock" tabindex="-1"><a href="./lock">lock</a> <a class="header-anchor" href="#lock" aria-label="Permalink to &quot;[lock](./lock.md)&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lock</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(fn: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Garante que a função assíncrona fornecida execute de forma exclusiva, prevenindo execuções concorrentes.</p><h3 id="parallel" tabindex="-1"><a href="./parallel">parallel</a> <a class="header-anchor" href="#parallel" aria-label="Permalink to &quot;[parallel](./parallel.md)&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parallel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tasks: Function[], concurrency</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">any[]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Executa múltiplas funções assíncronas em paralelo com limite opcional de concorrência.</p><h3 id="ratelimit" tabindex="-1"><a href="./rateLimit">rateLimit</a> <a class="header-anchor" href="#ratelimit" aria-label="Permalink to &quot;[rateLimit](./rateLimit.md)&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rateLimit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fn: Function, limit: number, interval: number): Function;</span></span></code></pre></div><p>Retorna uma versão da função limitada por taxa de chamadas.</p><h3 id="retry" tabindex="-1"><a href="./retry">retry</a> <a class="header-anchor" href="#retry" aria-label="Permalink to &quot;[retry](./retry.md)&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">retry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fn: Function, retries: number, delay</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">any</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Tenta executar uma função um número especificado de vezes, com atraso opcional.</p><h3 id="sleep" tabindex="-1"><a href="./sleep">sleep</a> <a class="header-anchor" href="#sleep" aria-label="Permalink to &quot;[sleep](./sleep.md)&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ms: number): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Atrasa a execução por uma quantidade de milissegundos.</p><h3 id="throttle" tabindex="-1"><a href="./throttle">throttle</a> <a class="header-anchor" href="#throttle" aria-label="Permalink to &quot;[throttle](./throttle.md)&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">throttle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fn: Function, wait: number): Function;</span></span></code></pre></div><p>Retorna uma versão &quot;throttled&quot; de uma função que só executa uma vez por intervalo.</p>',36)]))}const u=s(n,[["render",l]]);export{c as __pageData,u as default};

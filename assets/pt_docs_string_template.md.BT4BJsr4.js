import{_ as i,c as r,a3 as n,j as a,a as s,t as l,o}from"./chunks/framework.DtMx7FFi.js";const u=JSON.parse('{"title":"template","description":"","frontmatter":{},"headers":[],"relativePath":"pt/docs/string/template.md","filePath":"pt/docs/string/template.md","lastUpdated":1753271433000}'),p={name:"pt/docs/string/template.md"};function d(e,t,h,k,c,g){return o(),r("div",null,[t[2]||(t[2]=n(`<h1 id="template" tabindex="-1">template <a class="header-anchor" href="#template" aria-label="Permalink to &quot;template&quot;">​</a></h1><p>Cria uma função de template que substitui placeholders em uma string por valores de um objeto de dados, suportando padrões personalizados e escape.</p><h2 id="sintaxe" tabindex="-1">Sintaxe <a class="header-anchor" href="#sintaxe" aria-label="Permalink to &quot;Sintaxe&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(str: string, options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TemplateOptions)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string</span></span></code></pre></div><h3 id="templateoptions" tabindex="-1">TemplateOptions <a class="header-anchor" href="#templateoptions" aria-label="Permalink to &quot;TemplateOptions&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Propriedade</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>pattern</code></td><td><code>RegExp</code> (opcional)</td><td>Padrão personalizado para placeholders (padrão: <code>/\\{\\{(.*?)\\}\\}/g</code>).</td></tr><tr><td><code>escape</code></td><td><code>(value: string, key: string) =&gt; string</code> (opcional)</td><td>Função para escapar valores antes da interpolação.</td></tr></tbody></table><h2 id="parametros" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parâmetro</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>str</code></td><td><code>string</code></td><td>String com placeholders no formato <code>\\{\\{chave\\}\\}</code>.</td></tr><tr><td><code>options</code></td><td><code>TemplateOptions</code> (opcional)</td><td>Opções para padrão personalizado e escape.</td></tr></tbody></table><h2 id="retorno" tabindex="-1">Retorno <a class="header-anchor" href="#retorno" aria-label="Permalink to &quot;Retorno&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>(data: Record&lt;string, any&gt;) =&gt; string</code></td><td>Função que recebe um objeto de dados e retorna a string interpolada.</td></tr></tbody></table><h2 id="exemplo" tabindex="-1">Exemplo <a class="header-anchor" href="#exemplo" aria-label="Permalink to &quot;Exemplo&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Olá, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\{\\{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nome</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\}\\}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">escape</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toUpperCase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() });</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ nome: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Maria&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Olá, MARIA!&quot;</span></span></code></pre></div><h2 id="notas" tabindex="-1">Notas <a class="header-anchor" href="#notas" aria-label="Permalink to &quot;Notas&quot;">​</a></h2>`,13)),a("ul",null,[t[0]||(t[0]=a("li",null,[s("Lança "),a("code",null,"TypeError"),s(" se "),a("code",null,"str"),s(" não for string, "),a("code",null,"pattern"),s(" não for RegExp ou "),a("code",null,"escape"),s(" não for função.")],-1)),t[1]||(t[1]=a("li",null,"Placeholders sem valor correspondente permanecem inalterados.",-1)),a("li",null,"As barras invertidas () antes das chaves ( "+l(e.e)+" ) são caracteres de escape utilizados apenas para evitar conflitos com o compilador da documentação. Ao utilizar a função na prática, use chaves simples sem escape.",1)]),t[3]||(t[3]=a("h2",{id:"referencias",tabindex:"-1"},[s("Referências "),a("a",{class:"header-anchor",href:"#referencias","aria-label":'Permalink to "Referências"'},"​")],-1)),t[4]||(t[4]=a("ul",null,[a("li",null,[a("a",{href:"https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String/replace",target:"_blank",rel:"noreferrer"},"MDN: String.prototype.replace()")])],-1))])}const m=i(p,[["render",d]]);export{u as __pageData,m as default};

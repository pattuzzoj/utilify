import{_ as t,c as a,a3 as i,o as s}from"./chunks/framework.CZXO3lrr.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/promise/backoff.md","filePath":"en/docs/promise/backoff.md","lastUpdated":1753224085000}'),l={name:"docs/promise/backoff.md"};function n(o,e,r,d,c,h){return s(),a("div",null,e[0]||(e[0]=[i('<h2 id="backoff" tabindex="-1">backoff <a class="header-anchor" href="#backoff" aria-label="Permalink to &quot;backoff&quot;">​</a></h2><p>The <code>backoff</code> function executes an asynchronous action with automatic retries and progressive delays between attempts, using backoff and jitter strategies.</p><h3 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> backoff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(action, options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>action</code></td><td style="text-align:left;"><code>Function</code></td><td style="text-align:left;">Asynchronous function to be executed and retried in case of error.</td></tr><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><code>object</code></td><td style="text-align:left;">(Optional) Advanced backoff and jitter configuration.</td></tr></tbody></table><h4 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h4><ul><li><code>backoffMode</code> (<code>&#39;fixed&#39; | &#39;linear&#39; | &#39;exponential&#39;</code>): Delay increase strategy (default: &#39;exponential&#39;).</li><li><code>initialDelay</code> (<code>number</code>): Initial delay in ms (default: 500).</li><li><code>jitterMode</code> (<code>&#39;none&#39; | &#39;full&#39; | &#39;equal&#39; | &#39;decorrelated&#39;</code>): Random delay variation strategy (default: &#39;full&#39;).</li><li><code>maxDelay</code> (<code>number</code>): Maximum delay in ms (default: 60000).</li><li><code>maxAttempts</code> (<code>number</code>): Maximum number of attempts (default: 5).</li><li><code>onRetry</code> (<code>Function</code>): Function called on each retry, receiving the attempt number and current delay.</li></ul><h3 id="return-value" tabindex="-1">Return Value <a class="header-anchor" href="#return-value" aria-label="Permalink to &quot;Return Value&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Promise</code></td><td style="text-align:left;">Resolves with the result of the action or rejects after all attempts.</td></tr></tbody></table><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> backoff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), { maxAttempts: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, backoffMode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;linear&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><h3 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h3><ul><li>Throws an error if parameters are invalid.</li><li>Useful for handling temporary failures in asynchronous operations, such as HTTP requests.</li></ul><h3 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h3><ul><li><a href="https://aws.amazon.com/pt/blogs/architecture/exponential-backoff-and-jitter/" target="_blank" rel="noreferrer">MDN: Exponential backoff and jitter</a></li></ul>',16)]))}const k=t(l,[["render",n]]);export{f as __pageData,k as default};

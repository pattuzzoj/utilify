import{_ as a,c as t,a3 as s,o as i}from"./chunks/framework.DtMx7FFi.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pt/docs/promise/benchmark.md","filePath":"pt/docs/promise/benchmark.md","lastUpdated":1754073507000}'),r={name:"pt/docs/promise/benchmark.md"};function n(o,e,l,d,h,c){return i(),t("div",null,e[0]||(e[0]=[s('<h2 id="benchmark" tabindex="-1">benchmark <a class="header-anchor" href="#benchmark" aria-label="Permalink to &quot;benchmark&quot;">​</a></h2><p>A função <code>benchmark</code> mede o tempo médio de execução de uma função síncrona ou assíncrona, útil para análise de performance.</p><h3 id="sintaxe" tabindex="-1">Sintaxe <a class="header-anchor" href="#sintaxe" aria-label="Permalink to &quot;Sintaxe&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> benchmark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(callback, iterations)</span></span></code></pre></div><h3 id="parametros" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">Parâmetro</th><th style="text-align:left;">Tipo</th><th style="text-align:left;">Descrição</th></tr></thead><tbody><tr><td style="text-align:left;"><code>callback</code></td><td style="text-align:left;"><code>Function</code></td><td style="text-align:left;">Função a ser executada e medida (pode ser assíncrona).</td></tr><tr><td style="text-align:left;"><code>iterations</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Número de execuções para calcular a média (&gt;= 1).</td></tr></tbody></table><h3 id="retorno" tabindex="-1">Retorno <a class="header-anchor" href="#retorno" aria-label="Permalink to &quot;Retorno&quot;">​</a></h3><p>Retorna uma <code>Promise&lt;number&gt;</code> com o tempo médio de execução em milissegundos.</p><h3 id="exemplos" tabindex="-1">Exemplos <a class="header-anchor" href="#exemplos" aria-label="Permalink to &quot;Exemplos&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> benchmark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Mede 10 execuções</span></span></code></pre></div><h3 id="notas" tabindex="-1">Notas <a class="header-anchor" href="#notas" aria-label="Permalink to &quot;Notas&quot;">​</a></h3><ul><li>Lança um <code>TypeError</code> se o callback não for função ou iterations não for número válido.</li><li>Útil para comparar performance de diferentes implementações.</li></ul><h3 id="referencias" tabindex="-1">Referências <a class="header-anchor" href="#referencias" aria-label="Permalink to &quot;Referências&quot;">​</a></h3><ul><li><a href="https://developer.mozilla.org/pt-BR/docs/Web/API/Performance/now" target="_blank" rel="noreferrer">MDN: performance.now()</a></li></ul>',14)]))}const m=a(r,[["render",n]]);export{k as __pageData,m as default};

import{_ as e,c as t,a3 as i,o as s}from"./chunks/framework.DtMx7FFi.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pt/docs/promise/backoff.md","filePath":"pt/docs/promise/backoff.md","lastUpdated":1753269870000}'),o={name:"pt/docs/promise/backoff.md"};function l(r,a,n,d,c,h){return s(),t("div",null,a[0]||(a[0]=[i('<h2 id="backoff" tabindex="-1">backoff <a class="header-anchor" href="#backoff" aria-label="Permalink to &quot;backoff&quot;">​</a></h2><p>A função <code>backoff</code> executa uma ação assíncrona com tentativas automáticas e atrasos progressivos entre as tentativas, utilizando estratégias de backoff e jitter.</p><h3 id="sintaxe" tabindex="-1">Sintaxe <a class="header-anchor" href="#sintaxe" aria-label="Permalink to &quot;Sintaxe&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> backoff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(action, options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="parametros" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">Parâmetro</th><th style="text-align:left;">Tipo</th><th style="text-align:left;">Descrição</th></tr></thead><tbody><tr><td style="text-align:left;"><code>action</code></td><td style="text-align:left;"><code>Function</code></td><td style="text-align:left;">Função assíncrona a ser executada e retentada em caso de erro.</td></tr><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><code>object</code></td><td style="text-align:left;">(Opcional) Configurações avançadas de backoff e jitter.</td></tr></tbody></table><h4 id="opcoes" tabindex="-1">Opções <a class="header-anchor" href="#opcoes" aria-label="Permalink to &quot;Opções&quot;">​</a></h4><ul><li><code>backoffMode</code> (<code>&#39;fixed&#39; | &#39;linear&#39; | &#39;exponential&#39;</code>): Estratégia de aumento do atraso (padrão: &#39;exponential&#39;).</li><li><code>initialDelay</code> (<code>number</code>): Atraso inicial em ms (padrão: 500).</li><li><code>jitterMode</code> (<code>&#39;none&#39; | &#39;full&#39; | &#39;equal&#39; | &#39;decorrelated&#39;</code>): Estratégia de variação aleatória do atraso (padrão: &#39;full&#39;).</li><li><code>maxDelay</code> (<code>number</code>): Atraso máximo em ms (padrão: 60000).</li><li><code>maxAttempts</code> (<code>number</code>): Número máximo de tentativas (padrão: 5).</li><li><code>onRetry</code> (<code>Function</code>): Função chamada a cada retentativa, recebendo o número da tentativa e o atraso atual.</li></ul><h3 id="retorno" tabindex="-1">Retorno <a class="header-anchor" href="#retorno" aria-label="Permalink to &quot;Retorno&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">Tipo</th><th style="text-align:left;">Descrição</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Promise</code></td><td style="text-align:left;">Resolve com o resultado da ação ou rejeita após todas as tentativas.</td></tr></tbody></table><h3 id="exemplos" tabindex="-1">Exemplos <a class="header-anchor" href="#exemplos" aria-label="Permalink to &quot;Exemplos&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> backoff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), { maxAttempts: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, backoffMode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;linear&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><h3 id="notas" tabindex="-1">Notas <a class="header-anchor" href="#notas" aria-label="Permalink to &quot;Notas&quot;">​</a></h3><ul><li>Lança erro se os parâmetros forem inválidos.</li><li>Útil para lidar com falhas temporárias em operações assíncronas, como requisições HTTP.</li></ul><h3 id="referencias" tabindex="-1">Referências <a class="header-anchor" href="#referencias" aria-label="Permalink to &quot;Referências&quot;">​</a></h3><ul><li><a href="https://aws.amazon.com/pt/blogs/architecture/exponential-backoff-and-jitter/" target="_blank" rel="noreferrer">MDN: Exponential backoff and jitter</a></li></ul>',16)]))}const f=e(o,[["render",l]]);export{k as __pageData,f as default};

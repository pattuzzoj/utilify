import{_ as e,c as s,a3 as i,o as t}from"./chunks/framework.DtMx7FFi.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pt/docs/promise/lock.md","filePath":"pt/docs/promise/lock.md","lastUpdated":1756761856000}'),l={name:"pt/docs/promise/lock.md"};function n(o,a,r,d,h,c){return t(),s("div",null,a[0]||(a[0]=[i(`<h2 id="lock" tabindex="-1">lock <a class="header-anchor" href="#lock" aria-label="Permalink to &quot;lock&quot;">​</a></h2><p>A função <code>lock</code> garante que uma função assíncrona não seja executada simultaneamente, podendo enfileirar chamadas ou rejeitá-las conforme configuração.</p><h3 id="sintaxe" tabindex="-1">Sintaxe <a class="header-anchor" href="#sintaxe" aria-label="Permalink to &quot;Sintaxe&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lock</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(callback, options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="parametros" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">Parâmetro</th><th style="text-align:left;">Tipo</th><th style="text-align:left;">Descrição</th></tr></thead><tbody><tr><td style="text-align:left;"><code>callback</code></td><td style="text-align:left;"><code>Function</code></td><td style="text-align:left;">Função assíncrona a ser protegida pelo lock.</td></tr><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><code>object</code></td><td style="text-align:left;">(Opcional) Configurações: <code>{ queue, onLocked, onError }</code>.</td></tr></tbody></table><h4 id="opcoes" tabindex="-1">Opções <a class="header-anchor" href="#opcoes" aria-label="Permalink to &quot;Opções&quot;">​</a></h4><ul><li><code>queue</code> (<code>boolean</code>): Se <code>true</code>, chamadas durante o lock são enfileiradas (padrão: <code>true</code>).</li><li><code>onLocked</code> (<code>Function</code>): Função chamada quando uma chamada é bloqueada.</li><li><code>onError</code> (<code>Function</code>): Função chamada em caso de erro na execução do callback.</li></ul><h3 id="retorno" tabindex="-1">Retorno <a class="header-anchor" href="#retorno" aria-label="Permalink to &quot;Retorno&quot;">​</a></h3><p>Retorna uma função assíncrona que respeita o lock e as opções configuradas.</p><h3 id="exemplos" tabindex="-1">Exemplos <a class="header-anchor" href="#exemplos" aria-label="Permalink to &quot;Exemplos&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> lockedFn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lock</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Executado!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lockedFn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lockedFn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Executa em sequência, não simultaneamente</span></span></code></pre></div><h3 id="notas" tabindex="-1">Notas <a class="header-anchor" href="#notas" aria-label="Permalink to &quot;Notas&quot;">​</a></h3><ul><li>Lança erro se o callback não for função.</li><li>Útil para evitar condições de corrida em operações assíncronas.</li></ul><h3 id="referencias" tabindex="-1">Referências <a class="header-anchor" href="#referencias" aria-label="Permalink to &quot;Referências&quot;">​</a></h3><ul><li><a href="https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">MDN: Promise</a></li></ul>`,16)]))}const u=e(l,[["render",n]]);export{k as __pageData,u as default};

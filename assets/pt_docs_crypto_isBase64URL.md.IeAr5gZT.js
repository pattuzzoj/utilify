import{_ as e,c as s,a3 as t,o as i}from"./chunks/framework.DtMx7FFi.js";const k=JSON.parse('{"title":"isBase64URL","description":"","frontmatter":{},"headers":[],"relativePath":"pt/docs/crypto/isBase64URL.md","filePath":"pt/docs/crypto/isBase64URL.md","lastUpdated":1756750495000}'),r={name:"pt/docs/crypto/isBase64URL.md"};function o(n,a,l,d,h,p){return i(),s("div",null,a[0]||(a[0]=[t(`<h1 id="isbase64url" tabindex="-1">isBase64URL <a class="header-anchor" href="#isbase64url" aria-label="Permalink to &quot;isBase64URL&quot;">​</a></h1><p>Verifica se uma string está codificada em Base64URL.</p><h2 id="sintaxe" tabindex="-1">Sintaxe <a class="header-anchor" href="#sintaxe" aria-label="Permalink to &quot;Sintaxe&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isBase64URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value: string): boolean</span></span></code></pre></div><h2 id="parametros" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>value</code></td><td><code>string</code></td><td>A string a ser verificada</td></tr></tbody></table><h2 id="retorno" tabindex="-1">Retorno <a class="header-anchor" href="#retorno" aria-label="Permalink to &quot;Retorno&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>boolean</code></td><td>Retorna <code>true</code> se a string estiver em formato Base64URL, caso contrário, retorna <code>false</code>.</td></tr></tbody></table><h2 id="exemplo" tabindex="-1">Exemplo <a class="header-anchor" href="#exemplo" aria-label="Permalink to &quot;Exemplo&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isBase64URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;U29tZV9kYWRvLQ&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isBase64URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;U29tZSBkYWRv&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isBase64URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12345</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// lança TypeError</span></span></code></pre></div><h2 id="notas" tabindex="-1">Notas <a class="header-anchor" href="#notas" aria-label="Permalink to &quot;Notas&quot;">​</a></h2><ul><li>Lança um <code>TypeError</code> se o valor não for uma string.</li><li>Base64URL utiliza os caracteres <code>A-Z</code>, <code>a-z</code>, <code>0-9</code>, <code>_</code> e <code>-</code>.</li></ul><h2 id="referencias" tabindex="-1">Referências <a class="header-anchor" href="#referencias" aria-label="Permalink to &quot;Referências&quot;">​</a></h2><ul><li><a href="https://datatracker.ietf.org/doc/html/rfc4648#section-5" target="_blank" rel="noreferrer">RFC 4648 - Base64URL</a></li></ul>`,14)]))}const u=e(r,[["render",o]]);export{k as __pageData,u as default};

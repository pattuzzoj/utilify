import{_ as e,c as t,a3 as s,o as i}from"./chunks/framework.DtMx7FFi.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pt/docs/object/pick.md","filePath":"pt/docs/object/pick.md","lastUpdated":1756761856000}'),l={name:"pt/docs/object/pick.md"};function n(o,a,r,h,p,d){return i(),t("div",null,a[0]||(a[0]=[s(`<h2 id="pick" tabindex="-1">pick <a class="header-anchor" href="#pick" aria-label="Permalink to &quot;pick&quot;">​</a></h2><p>A função <code>pick</code> cria um novo objeto contendo apenas as propriedades especificadas do objeto original.</p><h3 id="sintaxe" tabindex="-1">Sintaxe <a class="header-anchor" href="#sintaxe" aria-label="Permalink to &quot;Sintaxe&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj, keys): object</span></span></code></pre></div><h3 id="parametros" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">Parâmetro</th><th style="text-align:left;">Tipo</th><th style="text-align:left;">Descrição</th></tr></thead><tbody><tr><td style="text-align:left;"><code>obj</code></td><td style="text-align:left;"><code>object</code></td><td style="text-align:left;">Objeto de origem.</td></tr><tr><td style="text-align:left;"><code>keys</code></td><td style="text-align:left;"><code>string[]</code></td><td style="text-align:left;">Lista de chaves a serem selecionadas.</td></tr></tbody></table><h3 id="retorno" tabindex="-1">Retorno <a class="header-anchor" href="#retorno" aria-label="Permalink to &quot;Retorno&quot;">​</a></h3><p>Retorna um novo objeto contendo apenas as propriedades especificadas em <code>keys</code>.</p><h3 id="exemplos" tabindex="-1">Exemplos <a class="header-anchor" href="#exemplos" aria-label="Permalink to &quot;Exemplos&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ a: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;b&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { b: 2 }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ x: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;x&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { x: 10 }</span></span></code></pre></div><h3 id="notas" tabindex="-1">Notas <a class="header-anchor" href="#notas" aria-label="Permalink to &quot;Notas&quot;">​</a></h3><ul><li>Não modifica o objeto original.</li><li>Útil para extrair subconjuntos de dados de objetos maiores.</li></ul><h3 id="referencias" tabindex="-1">Referências <a class="header-anchor" href="#referencias" aria-label="Permalink to &quot;Referências&quot;">​</a></h3><ul><li><a href="https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwn" target="_blank" rel="noreferrer">MDN: Object.hasOwn</a></li></ul>`,14)]))}const b=e(l,[["render",n]]);export{k as __pageData,b as default};

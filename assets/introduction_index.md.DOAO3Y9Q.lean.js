import{_ as e,c as i,a3 as o,o as n}from"./chunks/framework.DtMx7FFi.js";const f=JSON.parse('{"title":"Welcome to Utilify","description":"","frontmatter":{"next":{"text":"Installation","link":"/introduction/installation"}},"headers":[],"relativePath":"introduction/index.md","filePath":"en/introduction/index.md","lastUpdated":1753271433000}'),a={name:"introduction/index.md"};function r(s,t,l,d,c,p){return n(),i("div",null,t[0]||(t[0]=[o('<h1 id="welcome-to-utilify" tabindex="-1">Welcome to Utilify <a class="header-anchor" href="#welcome-to-utilify" aria-label="Permalink to &quot;Welcome to Utilify&quot;">​</a></h1><p><strong>Utilify</strong> was born out of my real need for a utility function library that is modern, strongly typed, and safe for the JavaScript ecosystem.</p><p>Amidst countless fragmented options, I found a gap for tools that deliver:</p><ul><li><strong>Ease of use</strong>, with clear and straightforward APIs;</li><li><strong>Clear and accessible documentation</strong>, so learning and consulting are quick and uncomplicated;</li><li><strong>Robust typing</strong>, ensuring safety and autocomplete in TypeScript;</li><li><strong>Lightweight</strong>, so as not to compromise performance or bloat bundles;</li><li><strong>Reliability</strong>, avoiding unexpected behaviors common in generic utilities.</li></ul><p>We offer a wide range of utilities, organized into well-defined scopes, making navigation and quick access in the documentation easier.</p><p>That&#39;s why Utilify is not just another collection of helpers: it&#39;s a solution designed for developers who demand precision, consistency, and agility in daily development, without sacrificing simplicity.</p><p>Here, the priority is to deliver exactly what you need—nothing more—in a single, modern package ready to integrate with any JavaScript or TypeScript project.</p><p>Explore the features and discover how Utilify can elevate the quality and productivity of your code.</p>',8)]))}const g=e(a,[["render",r]]);export{f as __pageData,g as default};

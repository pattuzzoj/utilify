import{_ as a,c as t,a3 as i,o as s}from"./chunks/framework.DtMx7FFi.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pt/docs/promise/debounce.md","filePath":"pt/docs/promise/debounce.md","lastUpdated":1756751790000}'),o={name:"pt/docs/promise/debounce.md"};function l(n,e,d,r,c,h){return s(),t("div",null,e[0]||(e[0]=[i(`<h2 id="debounce" tabindex="-1">debounce <a class="header-anchor" href="#debounce" aria-label="Permalink to &quot;debounce&quot;">​</a></h2><p>A função <code>debounce</code> limita a frequência de execução de uma função, adiando sua chamada até que um intervalo de inatividade seja atingido.</p><h3 id="sintaxe" tabindex="-1">Sintaxe <a class="header-anchor" href="#sintaxe" aria-label="Permalink to &quot;Sintaxe&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">debounce</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(callback, wait</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="parametros" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">Parâmetro</th><th style="text-align:left;">Tipo</th><th style="text-align:left;">Descrição</th></tr></thead><tbody><tr><td style="text-align:left;"><code>callback</code></td><td style="text-align:left;"><code>Function</code></td><td style="text-align:left;">Função a ser executada de forma controlada.</td></tr><tr><td style="text-align:left;"><code>wait</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">(Opcional) Tempo de espera em milissegundos (padrão: 300).</td></tr><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><code>object</code></td><td style="text-align:left;">(Opcional) <code>{ leading, trailing, maxWait }</code> para controle avançado.</td></tr></tbody></table><h4 id="opcoes" tabindex="-1">Opções <a class="header-anchor" href="#opcoes" aria-label="Permalink to &quot;Opções&quot;">​</a></h4><ul><li><code>leading</code> (<code>boolean</code>): Executa no início do intervalo (padrão: <code>false</code>).</li><li><code>trailing</code> (<code>boolean</code>): Executa ao final do intervalo (padrão: <code>true</code>).</li><li><code>maxWait</code> (<code>number</code>): Tempo máximo sem execução (em ms).</li></ul><h3 id="retorno" tabindex="-1">Retorno <a class="header-anchor" href="#retorno" aria-label="Permalink to &quot;Retorno&quot;">​</a></h3><p>Retorna uma função debounced com métodos <code>cancel()</code> e <code>flush()</code>.</p><h3 id="exemplos" tabindex="-1">Exemplos <a class="header-anchor" href="#exemplos" aria-label="Permalink to &quot;Exemplos&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> debounced</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> debounce</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Executado!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { leading: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">debounced</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">debounced</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Apenas a primeira chamada executa imediatamente</span></span></code></pre></div><h3 id="notas" tabindex="-1">Notas <a class="header-anchor" href="#notas" aria-label="Permalink to &quot;Notas&quot;">​</a></h3><ul><li>Lança erro se <code>leading</code> e <code>trailing</code> forem ambos <code>false</code>.</li><li>Útil para otimizar eventos frequentes como digitação ou redimensionamento.</li></ul><h3 id="referencias" tabindex="-1">Referências <a class="header-anchor" href="#referencias" aria-label="Permalink to &quot;Referências&quot;">​</a></h3><ul><li><a href="https://developer.mozilla.org/pt-BR/docs/Web/API/setTimeout" target="_blank" rel="noreferrer">MDN: setTimeout()</a></li></ul>`,16)]))}const u=a(o,[["render",l]]);export{k as __pageData,u as default};

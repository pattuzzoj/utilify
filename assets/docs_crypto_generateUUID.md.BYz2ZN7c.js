import{_ as a,c as t,a3 as r,o as s}from"./chunks/framework.DtMx7FFi.js";const u=JSON.parse('{"title":"generateUUID","description":"","frontmatter":{},"headers":[],"relativePath":"docs/crypto/generateUUID.md","filePath":"en/docs/crypto/generateUUID.md","lastUpdated":1754073188000}'),i={name:"docs/crypto/generateUUID.md"};function n(o,e,l,d,h,p){return s(),t("div",null,e[0]||(e[0]=[r('<h1 id="generateuuid" tabindex="-1">generateUUID <a class="header-anchor" href="#generateuuid" aria-label="Permalink to &quot;generateUUID&quot;">​</a></h1><p>Generates a version 4 UUID (Universally Unique Identifier).</p><h2 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateUUID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): string</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p><em>None</em></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>string</code></td><td>A v4 UUID in standard format</td></tr></tbody></table><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateUUID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;e.g. 123e4567-e89b-12d3-a456-426614174000&quot;</span></span></code></pre></div><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><ul><li>Uses the <code>crypto.randomUUID</code> API available in modern environments.</li></ul><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID" target="_blank" rel="noreferrer">MDN: crypto.randomUUID</a></li><li><a href="https://datatracker.ietf.org/doc/html/rfc4122" target="_blank" rel="noreferrer">RFC 4122 - UUID</a></li></ul>',14)]))}const m=a(i,[["render",n]]);export{u as __pageData,m as default};

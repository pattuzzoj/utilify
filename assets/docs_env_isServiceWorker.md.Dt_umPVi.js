import{_ as a,c as r,a3 as s,o as t}from"./chunks/framework.DtMx7FFi.js";const k=JSON.parse('{"title":"isServiceWorker","description":"","frontmatter":{},"headers":[],"relativePath":"docs/env/isServiceWorker.md","filePath":"en/docs/env/isServiceWorker.md","lastUpdated":1756751790000}'),i={name:"docs/env/isServiceWorker.md"};function o(n,e,l,c,d,h){return t(),r("div",null,e[0]||(e[0]=[s(`<h1 id="isserviceworker" tabindex="-1">isServiceWorker <a class="header-anchor" href="#isserviceworker" aria-label="Permalink to &quot;isServiceWorker&quot;">​</a></h1><p>The <code>isServiceWorker</code> function checks if the code is running in a Service Worker.</p><h2 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isServiceWorker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): boolean;</span></span></code></pre></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>This function does not take any parameters.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>boolean</code></td><td><code>true</code> if running in a Service Worker, <code>false</code> otherwise</td></tr></tbody></table><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isServiceWorker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; true (in Service Worker)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; false (in other environments)</span></span></code></pre></div><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><ul><li>Checks for the existence of the global <code>ServiceWorkerGlobalScope</code> object and whether <code>self</code> is an instance of that scope.</li><li>Useful for conditioning Service Worker-specific executions.</li></ul><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope</a></li></ul>`,14)]))}const u=a(i,[["render",o]]);export{k as __pageData,u as default};

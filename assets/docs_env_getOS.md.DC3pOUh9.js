import{_ as t,c as a,a3 as s,o as i}from"./chunks/framework.DtMx7FFi.js";const u=JSON.parse('{"title":"getOS","description":"","frontmatter":{},"headers":[],"relativePath":"docs/env/getOS.md","filePath":"en/docs/env/getOS.md","lastUpdated":1754075262000}'),n={name:"docs/env/getOS.md"};function o(r,e,d,l,h,c){return i(),a("div",null,e[0]||(e[0]=[s(`<h1 id="getos" tabindex="-1">getOS <a class="header-anchor" href="#getos" aria-label="Permalink to &quot;getOS&quot;">​</a></h1><p>The <code>getOS</code> function returns the detected operating system in the browser environment.</p><h2 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getOS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): string </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>This function does not take any parameters.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>string</code> | <code>undefined</code></td><td>The name of the detected operating system or <code>undefined</code> if it cannot be determined</td></tr></tbody></table><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getOS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; &quot;Windows&quot;, &quot;macOS&quot;, &quot;Linux&quot;, &quot;Android&quot;, &quot;iOS&quot;, &quot;Unknown&quot; or undefined</span></span></code></pre></div><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><ul><li>Uses the <code>navigator</code> object to identify the operating system.</li><li>Returns <code>undefined</code> if not in a browser environment.</li><li>May return &quot;Unknown&quot; if the system is not recognized.</li></ul><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/Navigator</a></li></ul>`,14)]))}const g=t(n,[["render",o]]);export{u as __pageData,g as default};

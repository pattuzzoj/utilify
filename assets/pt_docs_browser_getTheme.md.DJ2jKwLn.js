import{_ as a,c as t,a3 as s,o as i}from"./chunks/framework.DtMx7FFi.js";const u=JSON.parse('{"title":"getTheme","description":"","frontmatter":{},"headers":[],"relativePath":"pt/docs/browser/getTheme.md","filePath":"pt/docs/browser/getTheme.md","lastUpdated":1756751790000}'),o={name:"pt/docs/browser/getTheme.md"};function r(l,e,h,n,d,p){return i(),t("div",null,e[0]||(e[0]=[s(`<h1 id="gettheme" tabindex="-1">getTheme <a class="header-anchor" href="#gettheme" aria-label="Permalink to &quot;getTheme&quot;">​</a></h1><p>A função <code>getTheme</code> retorna o tema preferido do usuário, como &quot;light&quot; ou &quot;dark&quot;, com base nas configurações do sistema ou navegador.</p><h2 id="sintaxe" tabindex="-1">Sintaxe <a class="header-anchor" href="#sintaxe" aria-label="Permalink to &quot;Sintaxe&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;light&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;dark&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="parametros" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h3><p>Esta função não recebe parâmetros.</p><h3 id="retorno" tabindex="-1">Retorno <a class="header-anchor" href="#retorno" aria-label="Permalink to &quot;Retorno&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>&quot;light&quot;</code> | <code>&quot;dark&quot;</code></td><td>Tema preferido do usuário</td></tr></tbody></table><h2 id="exemplos" tabindex="-1">Exemplos <a class="header-anchor" href="#exemplos" aria-label="Permalink to &quot;Exemplos&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; &quot;dark&quot;</span></span></code></pre></div><h2 id="notas" tabindex="-1">Notas <a class="header-anchor" href="#notas" aria-label="Permalink to &quot;Notas&quot;">​</a></h2><ul><li>Útil para adaptar a interface ao tema do usuário.</li><li>Baseia-se em media queries do CSS.</li></ul><h2 id="referencias" tabindex="-1">Referências <a class="header-anchor" href="#referencias" aria-label="Permalink to &quot;Referências&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/pt-BR/docs/Web/CSS/@media/prefers-color-scheme" target="_blank" rel="noreferrer">https://developer.mozilla.org/pt-BR/docs/Web/CSS/@media/prefers-color-scheme</a></li></ul>`,14)]))}const m=a(o,[["render",r]]);export{u as __pageData,m as default};

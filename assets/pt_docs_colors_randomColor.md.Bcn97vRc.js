import{_ as s,c as t,a3 as i,o as e}from"./chunks/framework.DWWPIHUH.js";const k=JSON.parse('{"title":"randomColor","description":"","frontmatter":{},"headers":[],"relativePath":"pt/docs/colors/randomColor.md","filePath":"pt/docs/colors/randomColor.md","lastUpdated":1753268366000}'),o={name:"pt/docs/colors/randomColor.md"};function r(l,a,n,h,d,p){return e(),t("div",null,a[0]||(a[0]=[i(`<h1 id="randomcolor" tabindex="-1">randomColor <a class="header-anchor" href="#randomcolor" aria-label="Permalink to &quot;randomColor&quot;">​</a></h1><p>A função <code>randomColor</code> gera uma cor aleatória no formato especificado: hexadecimal, RGB ou HSL, com opção de canal alfa.</p><h2 id="sintaxe" tabindex="-1">Sintaxe <a class="header-anchor" href="#sintaxe" aria-label="Permalink to &quot;Sintaxe&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">randomColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hex&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;rgb&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hsl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, alpha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> boolean): string;</span></span></code></pre></div><h3 id="parametros" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>format</code></td><td><code>string</code></td><td>(Opcional) Formato de saída: &quot;hex&quot;, &quot;rgb&quot; ou &quot;hsl&quot;</td></tr><tr><td><code>alpha</code></td><td><code>boolean</code></td><td>(Opcional) Se verdadeiro, inclui canal alfa</td></tr></tbody></table><h3 id="retorno" tabindex="-1">Retorno <a class="header-anchor" href="#retorno" aria-label="Permalink to &quot;Retorno&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>string</code></td><td>Cor aleatória no formato especificado</td></tr></tbody></table><h2 id="exemplos" tabindex="-1">Exemplos <a class="header-anchor" href="#exemplos" aria-label="Permalink to &quot;Exemplos&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">randomColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; &quot;rgb(123, 45, 67)&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">randomColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; &quot;#a1b2c3&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">randomColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hsl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; &quot;hsla(210, 50%, 60%, 0.7)&quot;</span></span></code></pre></div><h2 id="notas" tabindex="-1">Notas <a class="header-anchor" href="#notas" aria-label="Permalink to &quot;Notas&quot;">​</a></h2><ul><li>Lança um erro se o formato não for válido.</li><li>Útil para gerar cores dinâmicas em interfaces.</li></ul><h2 id="referencias" tabindex="-1">Referências <a class="header-anchor" href="#referencias" aria-label="Permalink to &quot;Referências&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/pt-BR/docs/Web/CSS/color_value" target="_blank" rel="noreferrer">https://developer.mozilla.org/pt-BR/docs/Web/CSS/color_value</a></li></ul>`,14)]))}const u=s(o,[["render",r]]);export{k as __pageData,u as default};

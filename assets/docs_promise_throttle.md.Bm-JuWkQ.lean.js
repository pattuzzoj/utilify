import{_ as e,c as a,a3 as i,o as s}from"./chunks/framework.DtMx7FFi.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/promise/throttle.md","filePath":"en/docs/promise/throttle.md","lastUpdated":1754073507000}'),l={name:"docs/promise/throttle.md"};function n(o,t,d,r,h,c){return s(),a("div",null,t[0]||(t[0]=[i(`<h2 id="throttle" tabindex="-1">throttle <a class="header-anchor" href="#throttle" aria-label="Permalink to &quot;throttle&quot;">​</a></h2><p>The <code>throttle</code> function limits how frequently a function can be executed, ensuring it is called at most once every defined time interval.</p><h3 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">throttle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(callback, wait, options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>callback</code></td><td style="text-align:left;"><code>Function</code></td><td style="text-align:left;">Function to be executed in a controlled manner.</td></tr><tr><td style="text-align:left;"><code>wait</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Minimum interval (in milliseconds) between function executions.</td></tr><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><code>object</code></td><td style="text-align:left;">(Optional) Additional settings: <code>{ leading, trailing, maxWait }</code>.</td></tr></tbody></table><h4 id="options-object" tabindex="-1"><code>options</code> object <a class="header-anchor" href="#options-object" aria-label="Permalink to &quot;\`options\` object&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>leading</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Executes at the start of the interval (default: true).</td></tr><tr><td style="text-align:left;"><code>trailing</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Executes at the end of the interval (default: true).</td></tr><tr><td style="text-align:left;"><code>maxWait</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Maximum time without execution, even with continuous calls.</td></tr></tbody></table><h3 id="return-value" tabindex="-1">Return Value <a class="header-anchor" href="#return-value" aria-label="Permalink to &quot;Return Value&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Function</code></td><td style="text-align:left;">Throttled function with <code>cancel()</code> and <code>flush()</code> methods.</td></tr></tbody></table><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> throttledFn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> throttle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Executed!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;resize&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, throttledFn);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Cancel pending calls</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">throttledFn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cancel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Force immediate execution</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">throttledFn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">flush</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h3><ul><li>Throws a <code>TypeError</code> if the callback is not a function.</li><li>Useful for optimizing high-frequency events like scroll, resize, etc.</li></ul><h3 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h3><ul><li><a href="https://developer.mozilla.org/pt-BR/docs/Web/API/setTimeout" target="_blank" rel="noreferrer">MDN: setTimeout()</a></li><li><a href="https://developer.mozilla.org/pt-BR/docs/Web/API/Performance/now" target="_blank" rel="noreferrer">MDN: performance.now()</a></li></ul>`,16)]))}const g=e(l,[["render",n]]);export{k as __pageData,g as default};
